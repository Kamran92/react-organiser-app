{"version":3,"sources":["components/Calendar/DayCalendar/DayCalendar.module.css","components/DateToday/Time/Time.module.css","components/DateToday/DateToday.module.css","components/NavigationButton/NavigationButton.module.css","components/TodoList/TodoList.module.css","dateInformation/dateInformation.js","components/Calendar/DayCalendar/DayCalendar.js","components/Calendar/Calendar.js","components/DateToday/Time/Time.js","components/DateToday/DateToday.js","components/NavigationButton/NavigationButton.js","components/TodoList/AddItemButton/AddItemButton.js","components/TodoList/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","date","Date","year","getFullYear","month","getMonth","day","getDate","week","getDay","time","toLocaleTimeString","dateInformation","arrDay","numberOfDays","arr","i","push","arrBeforeDay","beforeWeekday","beforeNum","dateBeforeDate","arrAfterDay","afterWeekday","afterNum","DayCalendar","props","joinArr","today","ondblclickTd","nameKeyTodoList","colorRed","classes","colorSilver","td","addClass","clazz","map","className","key","tdStyles","join","beforeMonth","afterMonth","arrJoin","idx","style","checkToday","dataId","forEach","item","data-id","onDoubleClick","length","result","splice","Calendar","Time","state","addTime","setState","setInterval","this","titleH1","Component","DateToday","nameMonths","titleH3","NavigationButton","onPrevMonth","onNextMonth","titleH4","onClick","AddItemButton","onAddTodoItem","type","TodoList","dataTodoList","attributeDataId","onDeleteTodoItem","toggle","findIndex","todoList","id","value","input","ol","App","addArrForEndYear","addArr","prev","beforeArr","afterArr","checkingToday","num","todayYear","todayMonth","todayDay","event","target","dataset","elem","previousElementSibling","newTodoItem","obj","slice","dataTodoListItem","jdx","addNameKeyTodoList","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2729559c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorRed\":\"DayCalendar_colorRed__1U7NS\",\"colorSilver\":\"DayCalendar_colorSilver__iYOW1\",\"td\":\"DayCalendar_td__IptZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleH1\":\"Time_titleH1__1tkM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleH3\":\"DateToday_titleH3__1v1zS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleH4\":\"NavigationButton_titleH4__1TRyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ol\":\"TodoList_ol__2dlNT\"};","const date = new Date(),\r\n  year = date.getFullYear(),\r\n  month = date.getMonth(),\r\n  day = date.getDate(),\r\n  week = date.getDay(),\r\n  time = date.toLocaleTimeString();\r\n\r\nconst arrDay = (year, month) => {\r\n  const dateForDays = new Date(year, month + 1, 0),\r\n    numberOfDays = dateForDays.getDate(),\r\n    arr = [];\r\n\r\n  for (let i = 1; i <= numberOfDays; i++) {\r\n    arr.push(i)\r\n  }\r\n\r\n  return arr;\r\n};\r\nconst arrBeforeDay = (year, month) => {\r\n  const dateForWeekday = new Date(year, month, 1);\r\n  const beforeWeekday = dateForWeekday.getDay();\r\n  let beforeNum = 0;\r\n  switch (beforeWeekday) {\r\n    case 0:\r\n      beforeNum = 6;\r\n      break;\r\n    case 1:\r\n      beforeNum = 0;\r\n      break;\r\n    default:\r\n      beforeNum = beforeWeekday - 1\r\n  }\r\n  const arrBeforeDay = [];\r\n  if (beforeNum !== 0) {\r\n    const beforeDate = new Date(year, month, 0);\r\n    const dateBeforeDate = beforeDate.getDate();\r\n    const resultBeforeNum = dateBeforeDate - beforeNum;\r\n    for (let i = resultBeforeNum; i < dateBeforeDate; i++) {\r\n      arrBeforeDay.push(i + 1)\r\n    }\r\n  }\r\n  return arrBeforeDay;\r\n};\r\nconst arrAfterDay = (year, month) => {\r\n  const dateForDays = new Date(year, month + 1, 0);\r\n  const afterWeekday = dateForDays.getDay();\r\n  let afterNum = 0;\r\n  switch (afterWeekday) {\r\n    case 0:\r\n      afterNum = 0;\r\n      break;\r\n    case 1:\r\n      afterNum = 6;\r\n      break;\r\n    default:\r\n      afterNum = 7 - afterWeekday\r\n  }\r\n\r\n  const arrAfterDay = [];\r\n\r\n  if (afterNum !== 0) {\r\n    for (let i = 1; i <= afterNum + 14; i++) {\r\n      arrAfterDay.push(i)\r\n    }\r\n  }\r\n\r\n\r\n  if (afterNum === 0) {\r\n    for (let i = 1; i <= afterNum + 14; i++) {\r\n      arrAfterDay.push(i)\r\n    }\r\n  }\r\n  return arrAfterDay;\r\n};\r\n\r\nconst dateInformation = {\r\n  date,\r\n  year,\r\n  month,\r\n  day,\r\n  week,\r\n  time,\r\n  arrDay: arrDay,\r\n  arrBeforeDay: arrBeforeDay,\r\n  arrAfterDay: arrAfterDay\r\n};\r\n\r\nexport default dateInformation;","import React from \"react\";\r\nimport classes from \"./DayCalendar.module.css\"\r\n\r\nconst DayCalendar = (props) => {\r\n  const {\r\n    arrBeforeDay, arrDay, arrAfterDay,\r\n    joinArr, today, month, ondblclickTd,\r\n    nameKeyTodoList\r\n  } = props;\r\n  const {colorRed, colorSilver, td} = classes;\r\n  const addClass = (arr, clazz) => {\r\n    return arr.map((day) => {\r\n      return (\r\n        <td className={clazz} key={day}>\r\n          {day}\r\n        </td>\r\n      )\r\n    })\r\n  };\r\n\r\n  const tdStyles = [colorSilver, td].join(\" \");\r\n  const beforeMonth = addClass(arrBeforeDay, tdStyles);\r\n  const afterMonth = addClass(arrAfterDay, tdStyles);\r\n\r\n  const checkToday = (day, today, style) => {\r\n    return day === today ? style : null;\r\n  };\r\n\r\n  const presentMonth = arrDay.map((day, idx) => {\r\n    const todayColor = checkToday(day, today, colorRed);\r\n    const style = [todayColor, td].join(\" \");\r\n    const dataId = `${month}-${day}`;\r\n    nameKeyTodoList.forEach(\r\n      (item) => item === dataId ? day += '\"' : day);\r\n    return (\r\n      <td className={style}\r\n          data-id={dataId}\r\n          onDoubleClick={ondblclickTd}\r\n          key={idx}>{day}</td>\r\n    )\r\n  });\r\n\r\n  const arrJoin = joinArr(beforeMonth, presentMonth, afterMonth);\r\n\r\n  const arr = [];\r\n  if (arrJoin.length > 42) {\r\n    const result = arrJoin.length - 42;\r\n    arrJoin.splice(-result, result)\r\n  }\r\n  for (let i = 0; i < 6; i++) {\r\n    const week = arrJoin.splice(0, 7);\r\n    arr.push(<tr key={i}>{week}</tr>)\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n    {arr}\r\n    </tbody>\r\n  )\r\n};\r\n\r\nexport default DayCalendar;","import React from \"react\";\r\nimport DayCalendar from \"./DayCalendar/DayCalendar\";\r\n\r\nconst Calendar = (props) => {\r\n  return (\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>Пн</th>\r\n        <th>Вт</th>\r\n        <th>Ср</th>\r\n        <th>Чт</th>\r\n        <th>Пт</th>\r\n        <th>Сб</th>\r\n        <th>Вс</th>\r\n      </tr>\r\n      </thead>\r\n      <DayCalendar {...props}/>\r\n    </table>\r\n  )\r\n};\r\n\r\nexport default Calendar;","import React, {Component, Fragment} from \"react\";\r\nimport classes from \"./Time.module.css\"\r\n\r\nclass Time extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: props.time\r\n    };\r\n\r\n    this.addTime = () => {\r\n      const time = new Date().toLocaleTimeString();\r\n      this.setState(() => {\r\n        return {\r\n          time: time\r\n        }\r\n      })\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(this.addTime, 1000)\r\n  }\r\n\r\n  render() {\r\n    const {time} = this.state;\r\n    const {titleH1}= classes;\r\n    return (\r\n      <Fragment>\r\n        <h1 className={titleH1}>{time}</h1>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Time;","import React, {Fragment} from \"react\";\r\nimport Time from \"./Time/Time\";\r\nimport classes from \"./DateToday.module.css\"\r\n\r\nconst DateToday = (props) => {\r\n  const {date, nameMonths, time} = props;\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n  const {titleH3}=classes;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Time time={time}/>\r\n      <h3 className={titleH3}>{`${day} ${nameMonths[month]} ${year} г.`}</h3>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default DateToday;","import React from \"react\";\r\nimport classes from \"./NavigationButton.module.css\"\r\n\r\nconst NavigationButton = (props) => {\r\n  const {\r\n    onPrevMonth, onNextMonth,\r\n    year, month, nameMonths\r\n  } = props;\r\n  const {titleH4}= classes;\r\n\r\n  return (\r\n    <div>\r\n      <h4 className={titleH4}>{`${nameMonths[month]} ${year} г.`}</h4>\r\n      <button onClick={onPrevMonth}>Назад</button>\r\n      <button onClick={onNextMonth}>Вперед</button>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default NavigationButton;","import React, {Fragment} from \"react\";\r\n\r\nconst AddItemButton = (props) => {\r\n  const {onAddTodoItem} = props;\r\n  return (\r\n    <Fragment>\r\n      <input type=\"text\"/>\r\n      <button onClick={onAddTodoItem}>+</button>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default AddItemButton;","import React from \"react\";\r\nimport AddItemButton from \"./AddItemButton/AddItemButton\";\r\nimport classes from \"./TodoList.module.css\"\r\n\r\nconst TodoList = (props) => {\r\n  const {\r\n    dataTodoList, attributeDataId,\r\n    onAddTodoItem, onDeleteTodoItem,\r\n    toggle\r\n  } = props;\r\n  let arr;\r\n  if (attributeDataId !== null) {\r\n    const idx = dataTodoList.findIndex(({dataId}) => dataId === attributeDataId);\r\n    if (idx !== -1) {\r\n      arr = dataTodoList[idx].todoList.map(({id, value}) => {\r\n        return (\r\n          <li key={id}>\r\n            {value}\r\n            <button onClick={() => onDeleteTodoItem(id)}>-</button>\r\n          </li>\r\n        )\r\n      })\r\n    }\r\n    if (idx === -1) {\r\n      arr = <div>Задач пока нет</div>\r\n    }\r\n  }\r\n  const input = toggle ?\r\n    <AddItemButton onAddTodoItem={onAddTodoItem}/> : null;\r\n  const {ol} = classes;\r\n  return (\r\n\r\n    <div>\r\n      {input}\r\n      <ol className={ol}>\r\n        {arr}\r\n      </ol>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TodoList;","import React, {Component} from 'react';\nimport dateInformation from \"./dateInformation/dateInformation\"\nimport Calendar from \"./components/Calendar/Calendar\";\nimport DateToday from \"./components/DateToday/DateToday\";\nimport NavigationButton from \"./components/NavigationButton/NavigationButton\";\nimport TodoList from \"./components/TodoList/TodoList\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      date, year, month,\n      day, week, time,\n      arrDay, arrBeforeDay, arrAfterDay\n    } = dateInformation;\n\n    this.state = {\n      date, year, month,\n      day, week, time,\n      arrDay: arrDay(year, month),\n      arrBeforeDay: arrBeforeDay(year, month),\n      arrAfterDay: arrAfterDay(year, month),\n      nameMonths: [\n        'Январь', 'Февраль', 'Март', 'Апрель',\n        'Май', 'Июнь', 'Июль', 'Август',\n        'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь',\n      ],\n      attributeDataId: null,\n      toggle: false,\n      dataTodoList: [\n        {\n          dataId: \"1-5\",\n          todoList: [\n            {\n              id: 0,\n              value: \"Задача 1\"\n            },\n            {\n              id: 1,\n              value: \"Задача 2\"\n            }\n          ]\n        },\n        {\n          dataId: \"1-6\",\n          todoList: [\n            {\n              id: 0,\n              value: \"Задача 2\"\n            }\n          ]\n        }\n      ]\n    };\n\n    this.onPrevMonth = () => {\n      const {month} = this.state;\n      if (month === 0) {\n        this.setState(({year, month}) => {\n          year -= 1;\n          month = 11;\n          return this.addArrForEndYear(year, month)\n        })\n      } else {\n        this.addArr(\"-\")\n      }\n    };\n    this.onNextMonth = () => {\n      const {month} = this.state;\n      if (month === 11) {\n        this.setState(({year, month}) => {\n          year += 1;\n          month = 0;\n          return this.addArrForEndYear(year, month)\n        })\n      } else {\n        this.addArr(\"+\")\n      }\n    };\n    this.addArr = (prev) => {\n      return this.setState(({year, month}) => {\n        if (prev === \"-\") {\n          month -= 1\n        }\n        if (prev === \"+\") {\n          month += 1\n        }\n        return {\n          month,\n          arrDay: arrDay(year, month),\n          arrBeforeDay: arrBeforeDay(year, month),\n          arrAfterDay: arrAfterDay(year, month)\n        }\n      })\n    };\n    this.addArrForEndYear = (year, month) => {\n      return {\n        year, month,\n        arrDay: arrDay(year, month),\n        arrBeforeDay: arrBeforeDay(year, month),\n        arrAfterDay: arrAfterDay(year, month)\n      }\n    };\n    this.joinArr = (beforeArr, arr, afterArr) => {\n      return [...beforeArr, ...arr, ...afterArr]\n    };\n    this.checkingToday = () => {\n      const {date, year, month, day} = this.state;\n      let num = null;\n      const todayYear = date.getFullYear();\n      const todayMonth = date.getMonth();\n      const todayDay = date.getDate();\n      if (todayYear === year\n        && todayMonth === month\n        && todayDay === day) {\n        num = day;\n      }\n      return num;\n    };\n    this.ondblclickTd = (event) => {\n      const id = event.target.dataset.id;\n      this.setState(() => {\n        return {\n          attributeDataId: id,\n          toggle: true\n        }\n      })\n    };\n    let i = 100;\n    this.onAddTodoItem = (event) => {\n      const elem = event.target.previousElementSibling;\n      const newTodoItem = {id: i++, value: elem.value};\n      elem.value = \"\";\n      const {attributeDataId, dataTodoList} = this.state;\n      const id = dataTodoList.findIndex(\n        ({dataId}) => dataId === attributeDataId);\n\n      if (id !== -1) {\n        const arr = [...dataTodoList[id].todoList, newTodoItem];\n        const obj = {dataId: attributeDataId, todoList: arr};\n        const result = [\n          ...dataTodoList.slice(0, id),\n          obj,\n          ...dataTodoList.slice(id + 1),\n        ];\n        this.setState(() => {\n          return {\n            dataTodoList: result\n          }\n        })\n      }\n\n      if (id === -1) {\n        const arr = [newTodoItem];\n        const obj = {dataId: attributeDataId, todoList: arr};\n        dataTodoList.push(obj);\n        this.setState(() => {\n          return {\n            dataTodoList: dataTodoList\n          }\n        })\n      }\n    };\n    this.onDeleteTodoItem = (id) => {\n      const {attributeDataId, dataTodoList} = this.state;\n      const idx = dataTodoList\n        .findIndex(({dataId}) => dataId === attributeDataId);\n      const dataTodoListItem = dataTodoList[idx].todoList;\n      const jdx = dataTodoListItem\n        .findIndex((state) => state.id === id);\n      const arr = [\n        ...dataTodoListItem.slice(0, jdx),\n        ...dataTodoListItem.slice(jdx + 1)\n      ];\n\n      let result;\n      if (arr.length !== 0) {\n        const obj = {\n          dataId: attributeDataId, todoList: arr\n        };\n        result = [\n          ...dataTodoList.slice(0, idx),\n          obj,\n          ...dataTodoList.slice(idx + 1),\n        ];\n      }\n\n      if (arr.length === 0) {\n        result = [\n          ...dataTodoList.slice(0, idx),\n          ...dataTodoList.slice(idx + 1),\n        ];\n      }\n\n      this.setState(() => {\n        return {\n          dataTodoList: result\n        }\n      })\n    }\n  }\n\n\n  render() {\n    const {\n      date, year, month, time, arrDay,\n      arrBeforeDay, arrAfterDay, nameMonths,\n      attributeDataId, dataTodoList, toggle\n    } = this.state;\n    const addNameKeyTodoList = dataTodoList\n      .map((item) => item.dataId);\n    const today = this.checkingToday();\n    return (\n      <div>\n        <DateToday\n          nameMonths={nameMonths}\n          date={date}\n          time={time}/>\n        <NavigationButton\n          year={year}\n          month={month}\n          nameMonths={nameMonths}\n          onPrevMonth={this.onPrevMonth}\n          onNextMonth={this.onNextMonth}/>\n        <Calendar\n          arrBeforeDay={arrBeforeDay}\n          arrDay={arrDay}\n          arrAfterDay={arrAfterDay}\n          today={today}\n          month={month}\n          nameKeyTodoList={addNameKeyTodoList}\n          joinArr={this.joinArr}\n          ondblclickTd={this.ondblclickTd}/>\n        <TodoList\n          dataTodoList={dataTodoList}\n          attributeDataId={attributeDataId}\n          toggle={toggle}\n          onAddTodoItem={this.onAddTodoItem}\n          onDeleteTodoItem={this.onDeleteTodoItem}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}